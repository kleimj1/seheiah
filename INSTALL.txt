=============================================
Seheiah INSTALL

To run Seheiah, you need some requierements and pocketsphinx. It can be done under Raspbian Wheezy via:

----------------------------------------------
apt-get install ffmpeg streamer v4l-utils v4l-conf firmware-realtek wireless-tools wpasupplicant build-essential ca-certificates aria2 git-core bison libpulse-dev libasound2-dev libsndfile1-dev libsamplerate0-dev sqlite3 hdparm usbutils minicom screen msmtp msmtp-mta python python-serial python-sqlite python-requests python-opencv python-scipy python-numpy python-pip python-daemon ntpdate alsa mpg321 lame bsd-mailx python-gst0.10 python-gst0.10-dev gstreamer-tools gstreamer0.10-alsa gstreamer0.10-plugins-base libpulse-dev gstreamer0.10-pulseaudio libgpm2 libpulse-mainloop-glib0 dbus-x11 psmisc libasound2-plugins libck-connector0 libdbus-glib-1-2 libfftw3-3 libltdl7 libpam-ck-connector libpolkit-gobject-1-0 libspeexdsp1 libsystemd-daemon0 libtdb1 libwebrtc-audio-processing-0 rtkit screen python-pygame
#pulseaudio pulseaudio-module-x11 pulseaudio-utils consolekit
----------------------------------------------

Create a udev-rule, so that your arduino has always the same file name ...

----------------------------------------------
#udev-rule /rules.d/70-microcontrollers.rules
#arduino uno
SUBSYSTEMS=="usb", KERNEL=="ttyACM[0-9]*", ATTRS{idVendor}=="2341", ATTRS{idProduct}=="0001", SYMLINK+="sensors/arduino_%s{serial}", MODE="660", GROUP="plugdev"
----------------------------------------------

... and add evt. your user to some required groups

----------------------------------------------
#as root
usermod -a -G dialout username
usermod -a -G audio username
usermod -a -G video username
usermod -a -G plugdev username
----------------------------------------------

Create a cron job to get the proper time

----------------------------------------------
#as root
crontab -e

#crontab root
30 * * * * /usr/bin/ntpdate pool.ntp.org
----------------------------------------------

and set some options for audio and video if neccessary

----------------------------------------------
#in /etc/rc.local
 modprobe snd-bcm2835
 amixer cset numid=3 1

#in /etc/modprobe/modprobe.conf.d/uvcvideo.conf
 options uvcvideo nodrop=1 timeout=5000
----------------------------------------------

install Sphinxbase, pocketsphinx and sphinxtrain

----------------------------------------------
#I like aria, you gan also do it with wget

aria2c http://sourceforge.net/projects/cmusphinx/files/sphinxbase/0.8/sphinxbase-0.8.tar.gz/download
aria2c http://sourceforge.net/projects/cmusphinx/files/pocketsphinx/0.8/pocketsphinx-0.8.tar.gz/download
aria2c http://sourceforge.net/projects/cmusphinx/files/sphinxtrain/1.0.8/sphinxtrain-1.0.8.tar.gz/download
tar -xzf sphinxbase-0.8.tar.gz ; tar -xzf pocketsphinx-0.8.tar.gz ; tar -xzf sphinxtrain-1.0.8.tar.gz

cd sphinxbase-0.8
./configure
make
sudo make install
cd ../pocketsphinx-0.8
./configure
make
sudo make install
cd ../sphinxtrain-1.0.8
./configure
make
su do make install
----------------------------------------------

if this is done, you have to train pocketsphinx (this takes some time you can use "arecord -r 16000 -D hw:1,0 -d 5 -f S16_LE -c 1 filename.wav" to record your samples), set the variables in seheiah/program/seheiah.cfg and start seheiah with "./sehaiad.py start"


Im my case first alsa stessed, after a switch to pulseaudio i thougt, this was it, but it was'nt. Pulseaudio on rpi really really stessed. The solutions are queues. if 

----------------------------------------------
gst-launch alsasrc device=hw:1,0 ! queue ! audioconvert ! audioresample ! "audio/x-raw-int, rate=16000, width=16, depth=16, channels=1" ! vader name=vader auto-threshold=true ! pocketsphinx lm=/home/falko/seheiah/acoustic_model/etc/7646.lm dict=/home/falko/seheiah/acoustic_model/etc/7646.dic hmm=/home/falko/seheiah/acoustic_model/model_parameters/7646.cd_semi_200 name=listener ! fakesink dump=1
----------------------------------------------
runs in your case, do nothing. 


THIS IS ONLY FOR PULSEAUDIO USERS, WHERE PULSEAUDIO RUNS WITHOUT PROBLEMS

perhaps you have to change some files else to get run pulseaudio properly
ref: http://stackoverflow.com/questions/17778532/raspberrypi-pocketsphinx-ps3eye-error-failed-to-open-audio-device

----------------------------------------------
/etc/asound.conf

pcm.pulse {
    type pulse
}

ctl.pulse {
    type pulse
}

pcm.!default {
    type pulse
}

ctl.!default {
    type pulse
}


/etc/default/pulseaudio
"s,DISALLOW_MODULE_LOADING=1,DISALLOW_MODULE_LOADING=0,g"

/etc/pulse/default.pa
load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1
load-module module-zeroconf-publish

/etc/libao.conf
"s,default_driver=alsa,default_driver=pulse,g"
#in my tests pulseaudio blocks output, the program hangs, so I turned it back to the defaults and speech recognition uses the gstreamer-pipeline with pulse

/etc/pulse/daemon.conf
carlettPi added this
high-priority = yes
nice-level = 5
exit-idle-time = -1
resample-method = src-sinc-medium-quality
default-sample-format = s16le
default-sample-rate = 48000
default-sample-channels = 2"

adduser username pulse-access
----------------------------------------------





check the Bash-scripts in directory seheiah/helpers and modify the paths. Then do the scripts in cronjobs to check, if seheiahd and pulseaudio are running and internet connection is available

To use a PIR on GPIO run pigpio daemon
http://abyz.co.uk/rpi/pigpio/index.html
